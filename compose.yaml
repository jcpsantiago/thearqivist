---
# --- Docker Compose Configuration --- #
# - Docker Compose V2
# - https://docs.docker.com/compose/compose-file/
#
# Build the Clojure Service from source code
# and run on port 8080
#
# Examples of persistence with Postgres and mysql docker images
# and local data storage to facilitate data restoration

# name: "jcpsantiago-thearqivist"

services:
  # --- Clojure Service --- #
  clojure-service:
    platform: linux/amd64
    # Build using Dockerfile - relative path or Git repository
    build:
      # Use Dockerfile in project root
      context: ./
      # dockerfile   # alternate name for Dockerfile
    environment:
      - COMPOSE_PROJECT_NAME
    command: echo "Build and run ${COMPOSE_PROJECT_NAME}"
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 1m00s
      timeout: 10s
      retries: 5
      start_period: 7s
    depends_on:
      - "postgres"

  # Local OpenAPI (Swagger) Editor to debug swagger open api definition
  # Or use: https://editor-next.swagger.io/
  swagger-editor:
    image: "swaggerapi/swagger-editor:latest"
    ports:
      - "8282:8080"

  # --- Postgres Relational Database --- #
  # https://github.com/docker-library/docs/blob/master/postgres/README.md
  postgres:
    image: "postgres:15.2-alpine"
    restart: always
    environment:
      # superuser password - must not be empty
      POSTGRES_PASSWORD: "$DOCKER_POSTGRES_ROOT_PASSWORD"
      POSTGRES_USER: "$DOCKER_POSTGRES_USER"
      POSTGRES_DB: "$DOCKER_POSTGRES_DB"
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -d $DOCKER_POSTGRES_DB -U $DOCKER_POSTGRES_USER"]
    #   interval: 1s
    #   timeout: 5s
    #   retries: 10
    #   start_period: 10s
    # Persist Postgres database schema in a docker volume
    volumes:
      - postgres-data:/var/lib/postgres/data

  # postgres web-based administration tool
  posgres-adminer:
    image: adminer
    restart: always
    ports:
      - 8383:8080

# Mount project root
volumes:
  postgres-data:
#   mysql-data:
