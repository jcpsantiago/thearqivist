{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Arqivist \ud83d\udcd3","text":"The Arqivist hard at work <p>The Arqivist integrates Confluence and Slack, letting you create Confluence pages with the contents of your channels or message threads. It does not store or log any messages, files or other PII outside Confluence, and is thus fully GDPR compliant.</p> <p>You can try The Arqivist for free at the Atlassian marketplace, or explore the source code at jcpsantiago/thearqivist.</p> <p>Hop over to Getting started for instructions on how to use the app.</p>"},{"location":"#use-cases","title":"Use-cases","text":"<ul> <li>Creating ad-hoc documentation \u2014 No docs? No problem! Ask in Slack, then create a Confluence page with the answer to build your mini \"internal StackOverflow\".</li> <li>Incident management \u2014 Create a dedicated channel for an incident e.g. via Datadog, and save the whole discussion for future reference.</li> <li>Disaster recovery \u2014 Make Slack part of your disaster-recovery strategy, and backup the contents of critical channels.</li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<p>You can follow development in our GitHub Project.</p> <ul> <li>Ability to fully backup Slack all channels (i.e. all messages, all files, all emojis), all the time \u2014 at the moment you must select which channels you want to backup one by one.</li> <li>Backup raw Slack JSON to external cloud storage such as Google Drive, One Drive, Dropbox, etc.</li> </ul> <p>If you have a use-case missing from our roadmap, open an issue, or reach out to us. We'd love to hear from you!</p>"},{"location":"#out-of-scope","title":"Out of scope","text":"<p>Due to the permissions given to the app, it won't be possible to backup private conversations between users i.e. outside of channels.</p> <p>You can still backup these messages via Slack's native (manual) backup feature.</p>"},{"location":"#getting-help","title":"Getting help","text":"<p>There are two ways of getting help at the moment:</p> <ul> <li>Opening an issue in GitHub</li> <li>Sending an email to supervisor@arqivist.app </li> </ul> <p>We strive to answer all communications within 24h.</p> <p>We do not regurlary visit the Atlassian Community forums at the moment.</p>"},{"location":"#motivation","title":"Motivation","text":"<p>A lot of critical knowledge is created and shared via Slack. However, no one is in all channels, nor has the time to read all of them. We were missing a way to curate important discussions, and preserve them. Enter The Arqivist.</p> <p>Conversations saved outside Slack, could be linked and referenced in other docs and tickets. This, in turn, would make them more visible and consequential.</p> <p>Our experience has shown that Slack is great for fast knowledge transfer, but it should be complemented with a less interactive medium for long-term efficiency.</p>"},{"location":"#the-people-behind-the-arqivist","title":"The people behind The Arqivist","text":"<p>Jo\u00e3o Santiago is the main author.</p> <p>John Stevenson aka Practicalli is currently collaborating.</p>"},{"location":"#collaborating","title":"Collaborating","text":"<p>The Arqivist's source code is released as open-source software under the MIT license.</p> <p>If you found and fixed a bug, go ahead an open an PR (thanks!). If you would like to collaborate more actively, reach out to us, let's talk!</p>"},{"location":"atlassian/","title":"Atlassian's Confluence API","text":"<p>The Confluence has a lot of undocumented behavior, with info scattered across blog posts and forum answers.</p> <p>This page documents some of the relevant quirks to develop The Arqivist.</p>"},{"location":"atlassian/#application-descriptor","title":"Application descriptor","text":"<p>Confluence uses this JSON file to install apps. It contains identifying information about the app itself, and other pieces of configuration such as url endpoints and custom key-value pairs to save in each page's cache.</p>"},{"location":"getting_started/","title":"Getting started","text":""},{"location":"getting_started/#installing","title":"Installing","text":"<ol> <li>Install The Arqivist in your Confluence account via the Atlassian Marketplace.</li> <li>Open the <code>Get started</code> page of The Arqivist and follow the instructions. Press the <code>Add to Slack</code> button to be redirected to your Slack account.</li> <li>Review the permissions needed by The Arqivist (see below), and accept the integration.</li> <li>The Arqivist is now installed and ready to use </li> </ol>"},{"location":"getting_started/#permissions","title":"Permissions","text":"<p>The Arqivist needs the following Slack scopes to work (links go to Slack's own docs):</p> Scope Reason channels:history  Access all content in public channels. channels:join  Lets the bot automatically join public channels when invoked channels:read  Determine if a target channel is public or private chat:write  Write message in channel announcing its archival commands  Needed for the <code>/arqive</code> slash command groups:history  Needed to collect content for archiving private channels groups:read  Check which user created the private channel users:read  Replace user ids in raw Slack messages with actual user names before archiving"},{"location":"getting_started/#security-and-privacy","title":"Security and privacy","text":"<p>The Arqivist needs a wide set of permissions to work correctly. To respect your data, and assure the safety of your conversations, we do not save or log any messages or PII. On top of this, the app's code is open-source and auditable by anyone for full transparency.</p> <p>All Slack messages and files are processed without leaving a trail, and then saved in your own Confluence instance.</p> <p>For these reasons, The Arqivist is fully GDPR compliant.</p>"},{"location":"getting_started/#archiving-your-first-messages","title":"Archiving your first messages","text":"<p>The entrypoint for most actions is the <code>/arqive</code> slash command. Type it without any arguments in the channel you want to archive, and you'll be greeted with a modal like this</p> <p></p> <p>select the frequency with which The Arqivist should save the channel, and press \"Create archive\". For <code>daily</code> and <code>weekly</code> the app will create an archive immediately, then update it (i.e. append new messages to the Confluence page, and (if setup) add new json files to remote storage) with the frequency you select at 12am. Finally, you'll receive feedback that your job started</p> <p></p>"},{"location":"glossary/","title":"Glossary","text":"<p>These are terms used througout these docs, and throughout the source code.</p> Term Meaning Archiving The action of creating a Confluence page with the contents of a Slack channel or thread Contingencies Checks and associated actions to ensure the app can handle a Slack request Target A channel, or message thread, selected by a user for archival Team A Slack team/workspace Tenant An Atlassian Confluence account for an organisation"},{"location":"internals/","title":"Technical docs","text":"<p>This page fcouses on how the app works, and is meant for developers wanting to collaborate. If any term is unclear, see the Glossary.</p> <p>If you want to know how to use the app, then go to Getting started instead.</p>"},{"location":"internals/#interacting-with-slack","title":"Interacting with Slack","text":"<p>This is a step-by-step diagram of what happens when a user interacts with the app from Slack.</p> <pre><code>sequenceDiagram\n    autonumber\n    participant U as User\n    participant S as Slack\n    participant A as The Arqivist\n    participant C as Confluence\n    U-&gt;&gt;S: Interaction&lt;br&gt;(shortcut or slash)\n    Note left of U: user is waiting\n    S-&gt;&gt;+A: Call matching endpoint\n    A-&gt;&gt;S: Respond 200 immediately\n\n    Note over S,A: start contingency checks&lt;br&gt;(depends on endpoint)\n\n    break license is not valid\n        A-)U: inform user the license expired\n    end\n    break message is not in a thread\n        A-)U: Inform user that shortcuts only work in threads\n    end\n    A-)S: GET channel.info\n    break channel is private\n        A-)U: Ask user to invite the bot\n    end\n    A-)S: GET conversation.members\n    opt bot is not member of channel\n        A-)S: POST conversations.join\n    end\n    A-)C: CQL query for channel_id\n    opt thread or channel is already in Confluence\n        A-)U: Ask user if it's ok to overwrite existing page\n    end\n\n    Note over S,A: end contingency checks\n\n    A-)U: Show modal confirming action/requesting more info\n    Note left of U: sees modal\n    A--)S: GET conversation.history (`ch`)\n    U-&gt;&gt;S: Confirm\n    Note left of U: user is waiting\n    S-&gt;&gt;A: Call view_submission endpoint\n    loop For reply in `ch`\n        A-&gt;&gt;S: GET user.info\n    end\n    A-&gt;&gt;C: Create page\n    A-&gt;&gt;-U: Feedback\n    Note left of U: user sees feedback, end</code></pre> <p>There are two ways to use the bot in Slack:</p> <ul> <li>Via a message shortcut </li> <li>Via the <code>/arqive</code> slash command </li> </ul> <p>The message shortcut is present in the \"More actions\" or \"three dots\" button of each message. At the moment this method is only used for archiving message threads, because it's not possible to use slash commands within a thread.</p> <p>Users can add arbitrary text to a slash commands, which makes them more flexible.</p> <ul> <li><code>/arqive help</code>       shows a message explaining how to use the bot, which actions are available, etc.</li> <li><code>/arqive</code>            prompts the archival of the current channel once</li> <li><code>/arqive [schedule]</code> prompts the continuous archival of the current channel (WIP)</li> </ul> <p>Each of them will target a different endpoint in the app, namely <code>/slack/shortcut</code> and <code>/slack/slash</code>.</p> <p>Regardless of the endpoint, or use-case, some conditions must be met in order for the bot to work properly. We call these <code>contingencies</code> internally, and they are checked on each request:</p> <ul> <li>is the origin of the request a message thread? (used for the shorcut)</li> <li>is the channel private?</li> <li>is The Arqivist a member of the channel?</li> <li>is the current <code>target</code> already in Confluence?</li> </ul> <p>If all conditions are met, the user will see a modal for final confirmation of their action. Otherwise, they will receive a modal informing them that something is wrong, and they must take some action e.g. invite The Arqivist into the channel manually.</p>"}]}